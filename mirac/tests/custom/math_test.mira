
; #define rot \>3
; #define drop \!3
; #define dup \+3
; #define over \>.
; #define swap \><

; ----- 
; @brief Calculate the square of the sum of the elements in the provided array.
; 
; @warning The function assumes that elements in the provided array are of i64
; type!
; ----- 
func sum^2 req ptr i64 ret i64 {
	; ptr n
	0
	; ptr n sum
	\>3
	; sum ptr n
	loop \+. 0 <= {
		; sum ptr n
		\><
		; sum n ptr
		\+.
		; sum n ptr ptr
		\*64 as i64
		; sum n ptr val
		let sum ind p val {
			sum val + ind p
		}
		; sum n ptr
		1 +
		; sum n ptr+1
		\><
		; sum ptr+1 n
		1 -
		; sum ptr+1 n-1
	}
	; sum ptr n
	\!.
	; sum ptr
	\!.
	; sum
}

func sum^2 req ptr i64 ret i64 {
	0 \>3 loop \+. 0 <= {
		\>< \+. \*64 as i64
		let sum ind p val { sum val + ind p }
		1 + \>< 1 -
	} \!. \!.
}
