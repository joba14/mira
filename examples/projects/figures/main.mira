
#ifndef __main_mira__
#define __main_mira__

; ------------------------------------------------------------------
; the program below prints out to figures: a square and a triangle.
; ---
; ##########
; ##########
; ##########
; ##########
; ##########
; ##########
; ##########
; ##########
; ##########
; ##########
; 
; #
; ##
; ###
; ####
; #####
; ######
; #######
; ########
; #########
; ##########
; 
; ------------------------------------------------------------------

#include "std/io.mira"

; constants
#define width 11
#define height 10
#define N 110

; grid - array for the grid
sec .bss mem grid N

; --- 
; print a square on a 10x10 grid.
; --- 
sec .text func print-square {
	0 loop [ dup height < ] {
		0 loop [ dup width 1 - < ] {
			swap over over
			width * + grid + 35
			as u08 swap st08
			swap ++
		} drop

		dup 1 + width * 1 - grid + 10 as u08 swap st08 ++
	} drop

	N grid call puts
	10 call putc
}

; --- 
; print a trianle on a 10x10 grid.
; --- 
sec .text func print-triangle {
	0 loop [ dup height < ] {
		0 loop [ dup width 1 - < ] {
			swap over over
			if [ over over <= ] { width * + grid + 35 }
			else                { width * + grid + 32 }
			as u08 swap st08
			swap ++
		} drop

		dup 1 + width * 1 - grid + 10 as u08 swap st08 ++
	} drop

	N grid call puts
	10 call putc
}

; --- 
; entry.
; --- 
sec .text func _start {
	call print-square
	call print-triangle
	0 call exit
}

#endif
